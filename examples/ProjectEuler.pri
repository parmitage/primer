############################################################################
# Project Euler Problem 1
# 
# If we list all the natural numbers below 10 that are multiples of 3 or 5,
# we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of
# all the multiples of 3 or 5 below 1000.
############################################################################

Pe1: fn (limit)
   Inner(0, 0)
   where Inner: fn (x, accum)
            if x < limit then
               if x mod 3 == 0 or x mod 5 == 0 then
                  Inner(x + 1, accum + x)
               else Inner(x + 1, accum)
            else accum
         end
end

Show(Pe1(1000))  # ==> 234168

############################################################################
# Project Euler Problem 2
# 
# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# Find the sum of all the even-valued terms in the sequence which do not
# exceed 40 (this should be 4 million...).
############################################################################

Fib: fn (n)
   Inner(n, 0, 1)
   where Inner: fn (iter, result, next)
                    if iter == 0 then result
                    else Inner(iter - 1, next, result + next)
                 end
end

Show(Sum(Filter(Even, Map(Fib, 0..40))))

############################################################################
# Project Euler Problem 3
#
# The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143?
############################################################################

Prime: fn (x)
   Inner(2)
   where Inner: fn (y)
            if x > y then
               if x mod y == 0 then false
               else Inner(y + 1)
            else true
         end
end

Factor: fn (x, y) x mod y == 0 end

Pe3: fn (n)
   Last(Filter(PrimeFactor, 2..n))
   where PrimeFactor: fn (x) Prime(x) and Factor(n, x) end
end

Show(Pe3(6000))

#Show(Map(Prime, 1..10))